from transformers import AutoModelForCausalLM, AutoTokenizer, pipeline, BitsAndBytesConfig

class LyricsSentimentAnalyzer:
    def __init__(self, model_name="meta-llama/Llama-2-7b-chat-hf"):
        """
        Initializes the sentiment analyzer with a specified model.

        Args:
            model_name (str): Hugging Face model name for LLM. Defaults to "meta-llama/Llama-2-7b-chat-hf".
        """
        # Configure 8-bit quantization for efficient memory usage
        self.bnb_config = BitsAndBytesConfig(
            load_in_8bit=True,
            llm_int8_enable_fp32_cpu_offload=True
        )
        
        # Load tokenizer and model
        self.tokenizer = AutoTokenizer.from_pretrained(model_name, use_fast=False)
        self.model = AutoModelForCausalLM.from_pretrained(
            model_name,
            quantization_config=self.bnb_config,
            device_map="auto",
            trust_remote_code=True
        )
        
        # Create a text generation pipeline
        self.text_gen = pipeline(
            "text-generation", 
            model=self.model, 
            tokenizer=self.tokenizer, 
            device_map="auto"
        )

    def analyze_sentiment(self, lyrics_text, max_new_tokens=50, top_p=0.9):
        """
        Analyzes the sentiment of the provided lyrics.

        Args:
            lyrics_text (str): Lyrics text to analyze.
            max_new_tokens (int): Maximum number of tokens to generate.
            top_p (float): Sampling strategy for diversity.

        Returns:
            str: Sentiment analysis generated by the model.
        """
        # Create the prompt for sentiment analysis
        prompt = (
            f"Below are some song lyrics:\n\n{lyrics_text}\n\n"
            "Describe the overall sentiment and mood of these lyrics in one short and concise sentence."
        )
        
        # Generate the result
        result = self.text_gen(prompt, max_new_tokens=max_new_tokens, do_sample=True, top_p=top_p)
        
        # Return the generated text
        return result[0]['generated_text']

# Example usage:
lyrics = """
I'm walking through the shadows of my mind,
Trying to find a place where I belong.
The echoes of my past keep haunting me,
But I know I have to keep moving on.
"""

analyzer = LyricsSentimentAnalyzer()
sentiment = analyzer.analyze_sentiment(lyrics)
print("Generated Sentiment Analysis:")
print(sentiment)
